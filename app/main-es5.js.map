{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/components/contact/contact.component.ts","webpack:///src/app/components/contact/contact.component.html","webpack:///src/app/services/data-db.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AppComponent","title","selector","templateUrl","styleUrls","AppModule","initializeApp","firebaseConfig","declarations","imports","providers","bootstrap","ContactComponent","dbData","emailPattern","contactForm","createFormGroup","email","required","minLength","pattern","name","message","maxLength","reset","valid","saveMessage","value","onResetForm","console","log","get","onSaveForm","DataDbService","afs","contactCollection","collection","newContact","add","providedIn","environment","production","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","bootstrapModule","err","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n}\n","<contactForm></contactForm> ","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { AppComponent } from './app.component';\nimport { ContactComponent } from './components/contact/contact.component';\nimport { AngularFireModule } from '@angular/fire';\nimport { AngularFirestoreModule } from '@angular/fire/firestore';\nimport { environment } from '../environments/environment';\nimport { DataDbService } from './services/data-db.service';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ContactComponent\n  ],\n  imports: [\n    BrowserModule,\n    AngularFireModule.initializeApp(environment.firebaseConfig),\n    AngularFirestoreModule,\n    ReactiveFormsModule\n  ],\n  providers: [DataDbService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { DataDbService } from '../../services/data-db.service';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'contactForm',\n  templateUrl: './contact.component.html',\n  styleUrls: ['./contact.component.css']\n})\nexport class ContactComponent implements OnInit {\n\n  \n  private emailPattern: any = /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n\n  createFormGroup(){\n    return new FormGroup({\n      email: new FormControl('',[Validators.required, Validators.minLength(5),Validators.pattern(this.emailPattern)]),\n      name: new FormControl('',[Validators.required, Validators.minLength(5)]),\n      message: new FormControl('',[Validators.required, Validators.minLength(10), Validators.maxLength(100)])\n    });\n  }\n\n  contactForm: FormGroup;\n  constructor( private dbData: DataDbService) {\n    this.contactForm = this. createFormGroup();\n   }\n\n\n  ngOnInit(): void {\n  }\n\n  onResetForm(){\n    this.contactForm.reset();\n  }\n  onSaveForm(){\n   if (this.contactForm.valid){\n       this.dbData.saveMessage(this.contactForm.value);\n       this.onResetForm();\n       console.log('Valid');\n   }else{\n     console.log('Not Valid');\n   }\n   \n   \n  }\n\n  get name(){ return this.contactForm.get('name'); }\n  get email(){ return this.contactForm.get('email'); }\n  get message(){ return this.contactForm.get('message'); }\n\n}\n","<div class=\"form-container\">\n    <h1>Contact us!</h1>\n    <form [formGroup]=\"contactForm\" (ngSubmit)=\"onSaveForm()\">\n      <input type=\"text\" formControlName=\"name\" placeholder=\"Your Name\">\n      <div class=\"alert-danger\" *ngIf=\"name.invalid && (name.dirty || name.touched)\">\n        <div class=\"container-error-message\" *ngIf=\"name.errors.required\">\n          Name is required\n        </div>\n        <div class=\"container-error-message\" *ngIf=\"name.errors.minlength\">\n          Name must be at least 5 characters long.\n        </div>\n      </div>\n  \n      <input type=\"text\" formControlName=\"email\" placeholder=\"Your email\">\n  \n      <div class=\"alert-danger\" *ngIf=\"email.invalid && (email.dirty || email.touched)\">\n        <div class=\"container-error-message\" *ngIf=\"email.errors.required\">\n          Email is required\n        </div>\n        <div class=\"container-error-message\" *ngIf=\"email.errors.minlength\">\n          Email must be at least 5 characters long.\n        </div>\n        <div class=\"container-error-message\"\n          *ngIf=\"(email.dirty || email.touched) && email.invalid && email.errors.pattern\">\n          Value has to be a valid email address.\n        </div>\n      </div>\n      <textarea formControlName=\"message\" placeholder=\"Type your message\"></textarea>\n      <div class=\"alert-danger\" *ngIf=\"message.invalid && (message.dirty || message.touched)\">\n        <div class=\"container-error-message\" *ngIf=\"message.errors.required\">\n          Message is required\n        </div>\n        <div class=\"container-error-message\" *ngIf=\"message.errors.minlength\">\n          Message must be at least 10 characters long.\n        </div>\n      </div>\n      <button type=\"submit\" class=\"btn-send\" [disabled]=\"!contactForm.valid\">Send</button>\n    </form>\n  </div>","import { Injectable } from '@angular/core';\nimport { AngularFirestore, AngularFirestoreCollection } from '@angular/fire/firestore';\nimport { Observable } from 'rxjs';\nimport { MessageI } from '../models/message.interface';\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class DataDbService {\n  private contactCollection: AngularFirestoreCollection<MessageI>;\n  constructor(private afs: AngularFirestore) {\n    this.contactCollection = afs.collection<MessageI>('contacs');\n   }\n\n   saveMessage (newContact: MessageI): void{\n     this.contactCollection.add(newContact);\n   }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n   firebaseConfig : {\n    apiKey: \"AIzaSyCsmLqXYmOzcRUUA-lcBBwPahc5h5g3ySo\",\n    authDomain: \"aplicacion-angular-dc2b4.firebaseapp.com\",\n    databaseURL: \"https://aplicacion-angular-dc2b4.firebaseio.com\",\n    projectId: \"aplicacion-angular-dc2b4\",\n    storageBucket: \"aplicacion-angular-dc2b4.appspot.com\",\n    messagingSenderId: \"889437395190\",\n    appId: \"1:889437395190:web:09fe97cd9bbd944d86f4d7\",\n    measurementId: \"G-KTCXVSJXZP\"\n  }\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}