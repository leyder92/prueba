{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/components/contact/contact.component.ts","./src/app/components/contact/contact.component.html","./src/app/services/data-db.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n}\n","<contactForm></contactForm> ","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { AppComponent } from './app.component';\nimport { ContactComponent } from './components/contact/contact.component';\nimport { AngularFireModule } from '@angular/fire';\nimport { AngularFirestoreModule } from '@angular/fire/firestore';\nimport { environment } from '../environments/environment';\nimport { DataDbService } from './services/data-db.service';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ContactComponent\n  ],\n  imports: [\n    BrowserModule,\n    AngularFireModule.initializeApp(environment.firebaseConfig),\n    AngularFirestoreModule,\n    ReactiveFormsModule\n  ],\n  providers: [DataDbService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { DataDbService } from '../../services/data-db.service';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'contactForm',\n  templateUrl: './contact.component.html',\n  styleUrls: ['./contact.component.css']\n})\nexport class ContactComponent implements OnInit {\n\n  \n  private emailPattern: any = /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n\n  createFormGroup(){\n    return new FormGroup({\n      email: new FormControl('',[Validators.required, Validators.minLength(5),Validators.pattern(this.emailPattern)]),\n      name: new FormControl('',[Validators.required, Validators.minLength(5)]),\n      message: new FormControl('',[Validators.required, Validators.minLength(10), Validators.maxLength(100)])\n    });\n  }\n\n  contactForm: FormGroup;\n  constructor( private dbData: DataDbService) {\n    this.contactForm = this. createFormGroup();\n   }\n\n\n  ngOnInit(): void {\n  }\n\n  onResetForm(){\n    this.contactForm.reset();\n  }\n  onSaveForm(){\n   if (this.contactForm.valid){\n       this.dbData.saveMessage(this.contactForm.value);\n       this.onResetForm();\n       console.log('Valid');\n   }else{\n     console.log('Not Valid');\n   }\n   \n   \n  }\n\n  get name(){ return this.contactForm.get('name'); }\n  get email(){ return this.contactForm.get('email'); }\n  get message(){ return this.contactForm.get('message'); }\n\n}\n","<div class=\"form-container\">\n    <h1>Contact us!</h1>\n    <form [formGroup]=\"contactForm\" (ngSubmit)=\"onSaveForm()\">\n      <input type=\"text\" formControlName=\"name\" placeholder=\"Your Name\">\n      <div class=\"alert-danger\" *ngIf=\"name.invalid && (name.dirty || name.touched)\">\n        <div class=\"container-error-message\" *ngIf=\"name.errors.required\">\n          Name is required\n        </div>\n        <div class=\"container-error-message\" *ngIf=\"name.errors.minlength\">\n          Name must be at least 5 characters long.\n        </div>\n      </div>\n  \n      <input type=\"text\" formControlName=\"email\" placeholder=\"Your email\">\n  \n      <div class=\"alert-danger\" *ngIf=\"email.invalid && (email.dirty || email.touched)\">\n        <div class=\"container-error-message\" *ngIf=\"email.errors.required\">\n          Email is required\n        </div>\n        <div class=\"container-error-message\" *ngIf=\"email.errors.minlength\">\n          Email must be at least 5 characters long.\n        </div>\n        <div class=\"container-error-message\"\n          *ngIf=\"(email.dirty || email.touched) && email.invalid && email.errors.pattern\">\n          Value has to be a valid email address.\n        </div>\n      </div>\n      <textarea formControlName=\"message\" placeholder=\"Type your message\"></textarea>\n      <div class=\"alert-danger\" *ngIf=\"message.invalid && (message.dirty || message.touched)\">\n        <div class=\"container-error-message\" *ngIf=\"message.errors.required\">\n          Message is required\n        </div>\n        <div class=\"container-error-message\" *ngIf=\"message.errors.minlength\">\n          Message must be at least 10 characters long.\n        </div>\n      </div>\n      <button type=\"submit\" class=\"btn-send\" [disabled]=\"!contactForm.valid\">Send</button>\n    </form>\n  </div>","import { Injectable } from '@angular/core';\nimport { AngularFirestore, AngularFirestoreCollection } from '@angular/fire/firestore';\nimport { Observable } from 'rxjs';\nimport { MessageI } from '../models/message.interface';\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class DataDbService {\n  private contactCollection: AngularFirestoreCollection<MessageI>;\n  constructor(private afs: AngularFirestore) {\n    this.contactCollection = afs.collection<MessageI>('contacs');\n   }\n\n   saveMessage (newContact: MessageI): void{\n     this.contactCollection.add(newContact);\n   }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n   firebaseConfig : {\n    apiKey: \"AIzaSyCsmLqXYmOzcRUUA-lcBBwPahc5h5g3ySo\",\n    authDomain: \"aplicacion-angular-dc2b4.firebaseapp.com\",\n    databaseURL: \"https://aplicacion-angular-dc2b4.firebaseio.com\",\n    projectId: \"aplicacion-angular-dc2b4\",\n    storageBucket: \"aplicacion-angular-dc2b4.appspot.com\",\n    messagingSenderId: \"889437395190\",\n    appId: \"1:889437395190:web:09fe97cd9bbd944d86f4d7\",\n    measurementId: \"G-KTCXVSJXZP\"\n  }\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}